#!/bin/bash

set -euo pipefail

# Function to log messages
log() {
  echo "~~~ $1"
}

# Function to handle errors
error() {
  echo "ðŸš¨ Error: $1" >&2
  exit 1
}

# Parse plugin configuration
CUSTOM_REPO="${BUILDKITE_PLUGIN_CUSTOM_CHECKOUT24_REPOS_0_CONFIG_0_URL:-}"
CUSTOM_REF="${BUILDKITE_PLUGIN_CUSTOM_CHECKOUT24_REPOS_0_CONFIG_0_REF:-}"

if [[ -z "$CUSTOM_REPO" ]]; then
  error "No repository URL specified in the plugin configuration"
fi

log "Custom checkout configured:"
log "Repository: ${CUSTOM_REPO}"
log "Ref: ${CUSTOM_REF:-default branch}"

# Perform git checkout
if [[ -d ".git" ]]; then
  log "Updating existing repository"
  git remote set-url origin "$CUSTOM_REPO" || error "Failed to set remote URL"
  git fetch origin || error "Failed to fetch from remote"
else
  log "Cloning repository"
  git clone "$CUSTOM_REPO" . || error "Failed to clone repository"
fi

if [[ -n "$CUSTOM_REF" ]]; then
  log "Checking out ref: $CUSTOM_REF"
  git checkout -B "$CUSTOM_REF" "origin/$CUSTOM_REF" || error "Failed to checkout ref"
else
  log "Checking out default branch"
  git checkout "$(git symbolic-ref --short HEAD)" || error "Failed to checkout default branch"
fi

# Set Buildkite environment variables
export BUILDKITE_REPO="$CUSTOM_REPO"
export BUILDKITE_REFSPEC="$CUSTOM_REF"
export BUILDKITE_COMMIT="$(git rev-parse HEAD)"

log "Custom checkout completed successfully"
log "Current commit: $BUILDKITE_COMMIT"
log "Commit message: $(git log -1 --pretty=%B)"
log "Commit author: $(git log -1 --pretty=%an)"
log "Commit date: $(git log -1 --pretty=%ad)"
